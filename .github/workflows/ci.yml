name: CI/CD Pipeline

on:
  push:  # Runs on push to any branch
    branches:
      - '**'
  pull_request:  # Runs on all PRs before merging
    branches:
      - '**'


jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      # Clone repository into the GitHub Actions runner
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Write the secret to .env.test
      - name: Write env variables to file
        env:
          SECRETS: |
            NODE_ENV=${{ vars.NODE_ENV }}
            PORT=${{ vars.PORT }}
            ENCRYPTION_KEY=${{ vars.ENCRYPTION_KEY }}
            COOKIE_SECRET_KEY=${{ vars.COOKIE_SECRET_KEY }}
            JWT_SECRET=${{ vars.JWT_SECRET }}
            JWT_EXPIRES_IN=${{ vars.JWT_EXPIRES_IN }}
            POSTGRES_URL=${{ vars.POSTGRES_URL }}
            POSTGRES_PORT=${{ vars.POSTGRES_PORT }}
            POSTGRES_USER=${{ vars.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ vars.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ vars.POSTGRES_DB }}
            GOOGLE_CLIENT_ID=${{ vars.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ vars.GOOGLE_CLIENT_SECRET }}
            EMAIL_HOST=${{ vars.EMAIL_HOST }}
            EMAIL_SMTP_PORT=${{ vars.EMAIL_SMTP_PORT }}
            EMAIL_HTTP_PORT=${{ vars.EMAIL_HTTP_PORT }}
            EMAIL_USER=${{ vars.EMAIL_USER }}
            EMAIL_PASSWORD=${{ vars.EMAIL_PASSWORD }}
            EMAIL_FROM_ADDRESS=${{ vars.EMAIL_FROM_ADDRESS }}
            REDIS_PORT=${{ vars.REDIS_PORT }}
            REDIS_HOST=${{ vars.REDIS_HOST }}
            REDIS_PASSWORD=${{ vars.REDIS_PASSWORD }}
            SENTRY_DNS=${{ vars.SENTRY_DNS }}
        run: echo "$SECRETS" >> .env.test

      # Print the contents of .env.test for debugging
      - name: Print .env.test
        run: cat .env.test

      # Buildx is an advanced Docker builder that supports multi-platform builds and caching
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Run Tests
        run: |
          docker compose --env-file .env.test --profile test up

      - name: Wait for Tests to Finish
        run: |
          docker wait app

      - name: Stop and Clean Up
        run: docker-compose down